[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/icefabric/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/icefabric", "app", "tools"]

[project]
name = "icefabric"
version = "2025.7.1"
description = "An Apache Iceberg + Icechunk implementation of Hydrofabric data services"
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [
  { name = "Tadd Bindas", email = "tadd.bindas@ertcorp.com" },
  { name = "Sylvia Chin", email = "sylvia.c.chin@rtx.com" },
  { name = "Daniel Cumpton", email = "dcumpton@rtx.com" },
  { name = "Quercus Hamlin", email = "qhamlin@asrcfederal.com" },
  { name = "Brock Hinkson", email = "brock.w.hinkson@rtx.com" },
  { name = "Farshid Rahmani", email = "Farshid.Rahmani@rtx.com" },
]
maintainers = [
  { name = "Tadd Bindas", email = "tadd.bindas@ertcorp.com" },
  { name = "Sylvia Chin", email = "sylvia.c.chin@rtx.com" },
  { name = "Daniel Cumpton", email = "dcumpton@rtx.com" },
  { name = "Quercus Hamlin", email = "qhamlin@asrcfederal.com" },
  { name = "Brock Hinkson", email = "brock.w.hinkson@rtx.com" },
  { name = "Farshid Rahmani", email = "Farshid.Rahmani@rtx.com" },
]

dependencies = [
  "ambiance==1.3.1",
  "click==8.2.1",
  "dask==2025.5.1",
  "fiona==1.10.1",
  "fsspec==2025.5.1",
  "geodatasets==2024.8.0",
  "geopandas==1.0.1",
  "h5netcdf==1.6.1",
  "h5py==3.13.0",
  "icechunk==1.1.4",
  "ipywidgets==8.1.6",
  "jupytergis==0.5.0",
  "jupyterlab==4.4.3",
  "kerchunk==0.2.8",
  "mapclassify==2.9.0",
  "matplotlib==3.10.3",
  "netCDF4==1.7.2",
  "numpy==2.3.2",
  "pandas==2.2.3",
  "polars==1.31.0",
  "pyarrow==20.0.0",
  "pyiceberg[s3fs,glue,sql-sqlite]==0.9.1",
  "python-dotenv==1.1.0",
  "rioxarray==0.19.0",
  "rustworkx==0.16.0",
  "s3fs==2025.5.1",
  "scipy==1.15.3",
  "tifffile==2025.5.21",
  "tqdm==4.67.1",
  "virtualizarr==1.3.2",
  "xarray==2025.07.1",
  "zarr==3.1.0",
]

[project.scripts]
icefabric = "icefabric.cli.main:cli"

[project.optional-dependencies]
docs = [
  "mkdocs-material==9.6.14",
  "sympy==1.14.0"
]

[dependency-groups]
app = [
    "fastapi[standard]>=0.115.12",
    "pydantic==2.11.5",
    "pydantic-settings==2.9.1",
]
dev = [
  "pre-commit==3.8.0",
  "ruff==0.11.13",
  "black==25.1.0",
  "mypy==1.15.0",
  "nbstripout==0.8.1",
]
examples = [
  "folium==0.19.5",
  "httpx==0.28.1",
  "ipykernel==6.29.5",
  "jupyterlab==4.4.3",
  "jupytergis==0.5.0",
  "matplotlib==3.10.3",
]
tests = [
    "moto==5.1.8",
    "pytest==8.4.1",
    "pytest-asyncio==1.1.0",
    "pytest-cov==6.1.1",
]

[tool.uv]
default-groups = ["app", "dev", "examples", "tests"]

[tool.black]
line-length = 110
skip-string-normalization = true
preview = true
target-version = ['py311']

[tool.ruff]
line-length = 110
exclude = [".csv", "LICENSE", ".tf", ".tfvars"]
lint.select = [
  "F",      # Errors detected by Pyflakes
  "E",      # Error detected by Pycodestyle
  "W",      # Warning detected by Pycodestyle
  "I",      # isort
  "D",      # pydocstyle
  "B",      # flake8-bugbear
  "Q",      # flake8-quotes
  "TID",    # flake8-tidy-imports
  "C4",     # flake8-comprehensions
  "BLE",    # flake8-blind-except
  "UP",     # pyupgrade
  "RUF100", # Report unused noqa directives
]
lint.ignore = [
  # line too long -> we accept long comment lines; black gets rid of long code lines
  "E501",
  # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
  "E731",
  # allow I, O, l as variable names -> I is the identity matrix
  "E741",
  # Missing docstring in public package
  "D104",
  # Missing docstring in public module
  "D100",
  # Missing docstring in __init__
  "D107",
  # Errors from function calls in argument defaults. These are fine when the result is immutable.
  "B008",
  # __magic__ methods are are often self-explanatory, allow missing docstrings
  "D105",
  # first line should end with a period [Bug: doesn't work with single-line docstrings]
  "D400",
  # First line should be in imperative mood; try rephrasing
  "D401",
  ## Disable one in each pair of mutually incompatible rules
  # We don't want a blank line before a class docstring
  "D203",
  # We want docstrings to start immediately after the opening triple quote
  "D213",
  # Bare except okay for passing
  "E722",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
disallow_any_unimported = false
warn_unused_configs = true
strict_optional = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_unused_ignores = true

[tool.pytest.ini_options]
pythonpath = ["tests", "src/icefabric_api", "src/icefabric_tools"]
testpaths = ["src/icefabric_api/tests", "src/icefabric_tools/tests", "tests"]
